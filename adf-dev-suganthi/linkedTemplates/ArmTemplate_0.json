{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dev-suganthi"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"SN_CONTROL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SN_CONTROL'"
		},
		"Snowflake1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Snowflake1'"
		},
		"SqlServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServer1'"
		},
		"AzureBlobStorage1_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage1'"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://devkeyvaultsuganthi.vault.azure.net/"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "datacloudserver.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DATABASECLOUD"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "suganthib"
		},
		"BLOB_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'BLOB'"
		},
		"SN_CONTROL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "GOLD"
		},
		"Snowflake1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "GOLD"
		},
		"SELFHOSTEDIRSQL_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/6cda72ae-09db-4ac7-a49f-757ca002a156/resourcegroups/SUGANTHI_RGROUP/providers/Microsoft.DataFactory/factories/suganthidfactory/integrationruntimes/SELFHOSTEDIR"
		},
		"DevStorageLinkService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://bsdevsuganthi.dfs.core.windows.net/"
		},
		"SqlServer1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "BALAFAMILY\\SQLSERVER2017"
		},
		"SqlServer1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SQL_TRAINING_2024"
		},
		"SqlServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage1_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('BLOB_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SN_CONTROL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "jcccszv-sx98938",
					"user": "SUGANTHIB",
					"database": "[parameters('SN_CONTROL_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SN_CONTROL_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Snowflake1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "jcccszv-sx98938",
					"user": "SUGANTHIB",
					"database": "[parameters('Snowflake1_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Snowflake1_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SELFHOSTEDIRSQL')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('SELFHOSTEDIRSQL_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BLOB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"BCONTAINER": {
						"type": "string"
					},
					"BFOLDER_NMAE": {
						"type": "string"
					},
					"BFILE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().BFILE_NAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().BFOLDER_NMAE",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().BCONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BLOB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BLOB_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CONTAINER": {
						"type": "string"
					},
					"FOLDER_NAME": {
						"type": "string"
					},
					"FILE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FILE_NAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FOLDER_NAME",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SNOWFLAKE_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SN_CONTROL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SN_SCHEMA": {
						"type": "string"
					},
					"SN_TABLE": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "CLAIMS",
					"table": "CONTROL_TABLE_BATCH_001"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SN_CONTROL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SN_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Snowflake1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "CLAIM_ID",
						"type": "NUMBER",
						"precision": 5,
						"scale": 0
					},
					{
						"name": "CLAIMANT_NAME",
						"type": "VARCHAR",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "CLAIM_AMOUNT",
						"type": "NUMBER",
						"precision": 10,
						"scale": 0
					},
					{
						"name": "UPDATE_DATE",
						"type": "DATE",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "CLAIMS",
					"table": "CLAIM_DATA_TABLE1_TGT"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Snowflake1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDB_CLOUD')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DevStorageLinkService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DevStorageLinkService_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "scblobstorage"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServer1_properties_typeProperties_server')]",
					"database": "[parameters('SqlServer1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "SELFHOSTEDIRSQL",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SELFHOSTEDIRSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DevStorageLinkService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"CONTAINER": {
						"type": "string"
					},
					"FOLDER": {
						"type": "string"
					},
					"FILENAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FILENAME",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FOLDER",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().CONTAINER",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DevStorageLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SRC_ARCHIVE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DevStorageLinkService",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"compressionCodec": "gzip",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Customer_Id",
						"type": "String"
					},
					{
						"name": "Customer_First_Name",
						"type": "String"
					},
					{
						"name": "Customer_Last_Name",
						"type": "String"
					},
					{
						"name": "Customer_DOB",
						"type": "String"
					},
					{
						"name": "Customer_Type",
						"type": "String"
					},
					{
						"name": "Is_Loyal",
						"type": "String"
					},
					{
						"name": "First_Purchase_Date",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DevStorageLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SS_ONPREM_PARAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SCHEMA_NAME": {
						"type": "string"
					},
					"TABLE_NAME": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SCHEMA_NAME",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TABLE_NAME",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TGT_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DevStorageLinkService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CUSTOMERS.csv",
						"folderPath": "Output",
						"fileSystem": "data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DevStorageLinkService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_PIVOT_COLUMN')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDB_CLOUD",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDB_CLOUD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "pivot1"
						},
						{
							"name": "cast1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          YEAR as string,",
						"          ACCOUNT as string,",
						"          MONTHSNAME as string,",
						"          AMOUNT as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"cast1 pivot(groupBy(YEAR,",
						"          ACCOUNT),",
						"     pivotBy(MONTHSNAME),",
						"     { } = sum(AMOUNT),",
						"     columnNaming: '$N$V',",
						"     lateral: true) ~> pivot1",
						"source1 cast(output(",
						"          AMOUNT as integer",
						"     ),",
						"     errors: true) ~> cast1",
						"pivot1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDB_CLOUD')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_UNPIVOT')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SQLDB_CLOUD",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQLDB_CLOUD",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "multiplerowsfromsingle"
						}
					],
					"scriptLines": [
						"source(output(",
						"          YEAR as string,",
						"          ACCOUNT as string,",
						"          MONTH1 as string,",
						"          MONTH2 as string,",
						"          MONTH3 as string,",
						"          MONTH4 as string,",
						"          MONTH5 as string,",
						"          MONTH6 as string,",
						"          MONTH7 as string,",
						"          MONTH8 as string,",
						"          MONTH9 as string,",
						"          MONTH10 as string,",
						"          MONTH11 as string,",
						"          MONTH12 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 unpivot(output(",
						"          MONTHSNAME as string,",
						"          AMOUNT as string",
						"     ),",
						"     ungroupBy(YEAR,",
						"          ACCOUNT),",
						"     lateral: true,",
						"     ignoreNullPivots: false) ~> multiplerowsfromsingle",
						"multiplerowsfromsingle sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          YEAR,",
						"          ACCOUNT,",
						"          MONTHSNAME,",
						"          AMOUNT",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLDB_CLOUD')]"
			]
		}
	]
}