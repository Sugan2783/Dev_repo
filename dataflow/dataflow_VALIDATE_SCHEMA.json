{
	"name": "dataflow_VALIDATE_SCHEMA",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ADLS_PARAM",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "DevStorageLinkService",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Claim_id as short,",
				"          claimant_name as string,",
				"          claim_amount as integer,",
				"          Update_date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     partitionFileNames:['Claim_Data_Table1.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     outputAssertFailedRows: true,",
				"     assertFailure_fileSystem: 'data',",
				"     assertFailure_folderPath: 'ARCHIVE',",
				"     mapColumn(",
				"          Claim_id,",
				"          claimant_name,",
				"          claim_amount,",
				"          Update_date",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}